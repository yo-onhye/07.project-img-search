{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["masonryOptions","transitionDuration","imagesLoadedOptions","background","App","state","url","interest","search","key","per_page","tagmode","privacy_filter","format","nojsoncallback","tag","limit","datas","showData","isShowMore","isSearchOpen","loading","getData","a","setState","response","axios","get","data","photos","photo","console","error","handleSortList","handleChange","e","target","value","name","handleInsert","preventDefault","slice","handleShowMore","renderButton","type","className","onClick","this","prevProps","prevState","props","log","statedatas","onSubmit","onChange","placeholder","title","elementType","options","map","id","href","farm","server","secret","src","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1bfc8b04.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Masonry from \"react-masonry-component\";\nimport \"./App.css\";\n\nconst masonryOptions = {\n\ttransitionDuration: 0,\n};\n\nconst imagesLoadedOptions = { background: \".item\" };\n\nclass App extends Component {\n\tstate = {\n\t\turl: \"https://www.flickr.com/services/rest/?\",\n\t\tinterest: \"flickr.interestingness.getList\",\n\t\tsearch: \"flickr.photos.search\",\n\t\tkey: \"b27343c07ef22647404873055e1a3b3e\",\n\t\tper_page: 100,\n\t\ttagmode: \"any\",\n\t\tprivacy_filter: 10,\n\t\tformat: \"json\",\n\t\tnojsoncallback: 1,\n\t\ttag: \"\",\n\t\tlimit: 10,\n\t\tdatas: null,\n\t\tshowData: null,\n\t\tisShowMore: true,\n\t\tisSearchOpen: false,\n\t\tloading: false,\n\t};\n\n\tgetData = async () => {\n\t\ttry {\n\t\t\tthis.setState({\n\t\t\t\tloading: true,\n\t\t\t});\n\n\t\t\tlet response = \"\";\n\n\t\t\tif (this.state.tag === \"\") {\n\t\t\t\tresponse = await axios.get(`${this.state.url}method=${this.state.interest}&api_key=${this.state.key}&per_page=${this.state.per_page}&tagmode=${this.state.tagmode}&privacy_filter=${this.state.privacy_filter}&format=${this.state.format}&nojsoncallback=${this.state.nojsoncallback}`);\n\t\t\t} else {\n\t\t\t\tresponse = await axios.get(`${this.state.url}method=${this.state.search}&api_key=${this.state.key}&per_page=${this.state.per_page}&tagmode=${this.state.tagmode}&privacy_filter=${this.state.privacy_filter}&format=${this.state.format}&nojsoncallback=${this.state.nojsoncallback}&tags=${this.state.tag}`);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tdatas: response.data.photos.photo,\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\tlimit: 10,\n\t\t});\n\t\tthis.handleSortList();\n\t};\n\n\thandleChange = (e) => {\n\t\tconst { value, name } = e.target;\n\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\thandleInsert = (e) => {\n\t\te.preventDefault();\n\n\t\tif (!this.state.isSearchOpen) {\n\t\t\tthis.setState({\n\t\t\t\tisSearchOpen: true,\n\t\t\t});\n\t\t} else if (this.state.isSearchOpen && this.state.tag !== \"\") {\n\t\t\tthis.setState({\n\t\t\t\tisSearchOpen: false,\n\t\t\t\ttag: \"\",\n\t\t\t});\n\t\t\tthis.getData();\n\t\t}\n\t};\n\n\thandleSortList = () => {\n\t\tif (this.state.datas !== null) {\n\t\t\tthis.setState({\n\t\t\t\tshowData: this.state.datas.slice(0, this.state.limit),\n\t\t\t});\n\t\t}\n\t};\n\n\thandleShowMore = () => {\n\t\tconst { limit, datas, per_page } = this.state;\n\n\t\tif (limit >= per_page - 10) {\n\t\t\tthis.setState({\n\t\t\t\tisShowMore: false,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tlimit: limit + 10,\n\t\t\t\tshowData: datas.slice(0, limit + 10),\n\t\t\t});\n\t\t}\n\t};\n\n\trenderButton = () => {\n\t\tif (!this.state.isShowMore) return null;\n\t\treturn (\n\t\t\t<button type='button' className='ProjectBtnMore' onClick={this.handleShowMore}>\n\t\t\t\t<span>더보기</span>\n\t\t\t</button>\n\t\t);\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getData();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.props.showData !== prevProps.showData) {\n\t\t\tconsole.log(\"mount\");\n\t\t\tthis.handleSortList();\n\t\t\tthis.setState({\n\t\t\t\tshowData: this.statedatas.slice(0, this.state.limit + 10),\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { datas, showData, loading, isSearchOpen } = this.state;\n\n\t\treturn (\n\t\t\t<div className='projectMain'>\n\t\t\t\t<header className='projcetLogo'>\n\t\t\t\t\t<h1 className='logo'>\n\t\t\t\t\t\t<span className='s1'>I</span>\n\t\t\t\t\t\t<span className='s2'>m</span>\n\t\t\t\t\t\t<span className='s3'>g</span>\n\t\t\t\t\t\t<span className='s4'>S</span>\n\t\t\t\t\t\t<span className='s5'>e</span>\n\t\t\t\t\t\t<span className='s6'>a</span>\n\t\t\t\t\t\t<span className='s7'>r</span>\n\t\t\t\t\t\t<span className='s8'>c</span>\n\t\t\t\t\t\t<span className='s8'>h</span>\n\t\t\t\t\t</h1>\n\t\t\t\t</header>\n\t\t\t\t<section className={`projectSearchBox ${isSearchOpen && \"active\"}`}>\n\t\t\t\t\t<form className='projectSearch' onSubmit={this.handleInsert}>\n\t\t\t\t\t\t<input type='text' value={this.state.tag} name='tag' className='projectSearchInput' onChange={this.handleChange} placeholder='검색어 입력' title='검색어를 입력하세요' />\n\t\t\t\t\t\t<button type='submit' className='projectSearchBtn'>\n\t\t\t\t\t\t\t<i className='icoSearch'></i>\n\t\t\t\t\t\t\t<span className='blind'>검색하기</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</section>\n\t\t\t\t<section className='projectContent'>\n\t\t\t\t\t{loading && (\n\t\t\t\t\t\t<div className='projcetLoader'>\n\t\t\t\t\t\t\t<span className='bar1'></span>\n\t\t\t\t\t\t\t<span className='bar2'></span>\n\t\t\t\t\t\t\t<span className='bar3'></span>\n\t\t\t\t\t\t\t<span className='bar4'></span>\n\t\t\t\t\t\t\t<span className='bar5'></span>\n\t\t\t\t\t\t\t<span className='bar6'></span>\n\t\t\t\t\t\t\t<p className='loadingText'>Loading...</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{!loading && datas !== null && (\n\t\t\t\t\t\t<Masonry elementType={\"ul\"} className={\"projectList\"} options={masonryOptions} imagesLoadedOptions={imagesLoadedOptions}>\n\t\t\t\t\t\t\t{showData !== null &&\n\t\t\t\t\t\t\t\tshowData.map((data) => (\n\t\t\t\t\t\t\t\t\t<li key={data.id} className='item'>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<a href={`https://farm${data.farm}.staticflickr.com/${data.server}/${data.id}_${data.secret}_b.jpg`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={`https://farm${data.farm}.staticflickr.com/${data.server}/${data.id}_${data.secret}_m.jpg`} alt='' />\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t<p>{data.title}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Masonry>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.renderButton()}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}